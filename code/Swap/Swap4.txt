public void test() {
	$V $v = new $V();
	for ($v.$var0 = 1; $v.$var0 < n - 1; $v.$var0++) {
		$o0[$v.$var0 % 10][n % 10].m(this, $v);
		$o1[n % 10][$v.$var0 % 10].m(this, $v);
		$o2[$v.$var0 % 10][n % 10].m(this, $v);
		$o3[n % 10][$v.$var0 % 10].m(this, $v);
		$o4[$v.$var0 % 10][n % 10].m(this, $v);
		$o5[n % 10][$v.$var0 % 10].m(this, $v);
	}
	return;
}

private static final $O[][] $o5 = new $O[10][10];
static class $5A extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0, $v.$var0 - 1);
	}
}
static class $5B extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0 - 1, $v.$var0 + 1);
	}
}

private static final $O[][] $o4 = new $O[10][10];
static class $4A extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0, $v.$var0 + 1);
	}
}
static class $4B extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0, $v.$var0 - 1);
	}
}

private static final $O[][] $o3 = new $O[10][10];
static class $3A extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0, $this.n - 1 - $v.$var0);
	}
}
static class $3B extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0 - 1, $this.n - 1 - $v.$var0);
	}
}

private static final $O[][] $o2 = new $O[10][10];
static class $2A extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0 - 1, $v.$var0 + 1);
	}
}
static class $2B extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0, $v.$var0 + 1);
	}
}

private static final $O[][] $o1 = new $O[10][10];
static class $1A extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0 + 1, $this.n - 1 - $v.$var0);
	}
}
static class $1B extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0, $this.n - 1 - $v.$var0);
	}
}

private static final $O[][] $o0 = new $O[10][10];
static class $0A extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0, $this.n - 1 - $v.$var0);
	}
}
static class $0B extends $O {
	void m(Swap4 $this, $V $v) {
		swap($v.$var0 + 1, $this.n - 1 - $v.$var0);
	}
}

static class $V {
	int $var0;
}

static abstract class $O {
	abstract void m(Swap4 $this, $V $v);
	static final $O $o0a = new $0A(), $o0b = new $0B(),
			$o1a = new $1A(), $o1b = new $1B(),
			$o2a = new $2A(), $o2b = new $2B(),
			$o3a = new $3A(), $o3b = new $3B(),
			$o4a = new $4A(), $o4b = new $4B(),
			$o5a = new $5A(), $o5b = new $5B();
}

static {
	for (int x = 0; x < 10; x++) {
		for (int y = 0; y < 10; y++) {
			$o0[x][y] = (7 * x * x - 1 != y * y) ? $O.$o0a : $O.$o0b;
			$o1[x][y] = (7 * x * x - 1 != y * y) ? $O.$o1a : $O.$o1b;
			$o2[x][y] = (7 * x * x - 1 != y * y) ? $O.$o2a : $O.$o2b;
			$o3[x][y] = (7 * x * x - 1 != y * y) ? $O.$o3a : $O.$o3b;
			$o4[x][y] = (7 * x * x - 1 != y * y) ? $O.$o4a : $O.$o4b;
			$o5[x][y] = (7 * x * x - 1 != y * y) ? $O.$o5a : $O.$o5b;
		}
	}
}